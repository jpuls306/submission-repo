html {
  background-color: lightpink;
  font-size: 20px;
  font-family: Bitcount Grid Double;
}

body {
  width: 600px;
  margin: 0 auto;
  background-color: transparent;
  padding: 0 20px 20px 20px;
  border: 5px solid black;
}

h1 {
  font-size: 60px;
  text-align: center;
  margin: 0;
  padding: 20px 0;
  color: darkgrey;
  text-shadow: 3px 3px 1px black;
}

p,
li {
  font-size: 16px;
  line-height: 2;
  letter-spacing: 1px;
}

img {
  display: block;
  margin: 0 auto;
  max-width: 100%;
}
/* One thing you will notice as you use CSS more is that CSS is all about boxes, Most HTML elements on a page can be thought of as boxes that sit on top of or alongside other boxes. You can set values on these boxes for size, color, positioning, etc. This is referred to as the box model. So there is the main text in the center then padding, then a border then more padding and a margin. 
Each box that takes up space on your page has properties like: 
Padding: the space around the content. In the previous example, it is the space around the paragraph text.
Border: the solid line just outside the padding.
Margin: the space outside the border
In this section, we also use the following properties, some of which you've seen before:
1. width: the width of an element
2. background-color: the color behind an element's content and padding.
3. color: the color of an elements content(usually text)
4. text-shadow: a drop shadow on the text inside an element
5. display: the display mode of an element (which basically refers to how it appears or is laid out on the web page).

0 auto: when you set two values on a property like margin or padding, the first value effects the elements top and bottom sides, which was 0 in our case, the second value affects the left and right side. Auto is a special value that divides the available horizontal space evenly between left and right.
padding: 0 20px 20px 20px -> this sets four values for padding. The goal is to put some space around the content, in this example there is no padding on the top of the body and 20 pixels on the right, bottom and left. The values set top, right, bottom, and left padding in that order.
text-shadow: 3px 3px 1px black -> the first pixel value sets the horizontal offset of the shadow from the text: how far it moves accross. The secondpixel value sets the veritcal offset of the shadow from the text: how far it moves down. The third pixel values sets the blur radius of the shadow. A larger value produces a more fuzzy looking shadow. The fourth value is self explanatory setting the base color of the shadow.

We also made the image look better by using a trick, the body element is a block element meaning it takes up space on the page and can accept margin, padding, and other box properties. The img element on the other hand is an inline element which is why it does not follow body elements formatting of having a closing block <img/> <-- img is inline so it does not have this. By default they do not accept margin values in the same way block elements do. For the auto-margin trick to work on this image, we must give it a block-level behavior by using display: block; Finally we set the max-width property to 100% to ensure that if the image is larger than the width set on the body (600 pixels) in this case, it will be constrained to 600px and won't stretch wider.
.... */
